name: Submission Validation and Preview

on:
  pull_request:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all branches and full history
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false

      # TODO: move this to the "PR accepted" workflow
      # - name: Prettify code
      #   uses: creyD/prettier_action@v4.3
      #   with:
      #     prettier_options: '--write **/*.{js,jsx,ts,tsx,css,scss,md,html,yaml,liquid,yml}'
      #     only_changed: True
      #     # Set your custom token
      #     github_token: ${{ secrets.GITHUB_TOKEN }}

      # # Checkout the code again to get the latest changes (with Prettier formatting)
      # - name: Checkout updated code
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0 # Ensure full history is fetched

      - name: Install the latest version of uv with caching
        id: setup-uv
        uses: astral-sh/setup-uv@v1
        with:
          enable-cache: true

      - name: Run validation script
        run: uv run scripts/submission_check.py ${{ github.event.pull_request.base.ref }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Install and Build ðŸ”§
        run: |
          pip3 install --upgrade jupyter
          export JEKYLL_ENV=production
          bundle exec jekyll build

      - name: Purge unused CSS ðŸ§¹
        run: |
          npm install -g purgecss
          purgecss -c purgecss.config.js

      - name: Deploy to Submission Branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          destination_dir: submission/pr-${{ github.event.pull_request.number }}

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Post Preview Link to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Construct a unique preview URL using the pull request number
          PREVIEW_URL=https://${{ github.repository_owner }}.github.io/${{ github.repository }}/submission/pr-${{ github.event.pull_request.number }}
          COMMENT_BODY="Preview of your submission is available at: $PREVIEW_URL"

          # Fetch the existing comments on the pull request
          EXISTING_COMMENT=$(gh pr view ${{ github.event.pull_request.number }} --json comments --jq '.comments[] | select(.body | contains("Preview of your submission is available at")) | .id')

          # Check if a preview comment already exists and update or create a new one
          if [ -z "$EXISTING_COMMENT" ]; then
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT_BODY"
          else
            gh pr comment $EXISTING_COMMENT --body "$COMMENT_BODY"
          fi
